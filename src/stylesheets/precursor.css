@property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

#precursor-background {
    display: grid;
    place-items: center;
    background: linear-gradient(109.6deg, rgb(20, 30, 48) 11.2%, rgb(36, 59, 85) 91.1%);
    height: 100vh; /* Ensure full viewport height */
    top: -100vh;
    opacity: 1;
    overflow: hidden;
}

.background-video {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    height: 100%;
    width: 100%;
    object-fit: cover; /* Make video cover the entire area */
}

.precursor {
    /* Remove the transform from here if it exists */
    /* Other existing styles for .precursor remain unchanged */
    border-radius: 8px;
    cursor: pointer;
    min-width: 250px;
    min-height: 80px;
    background: #141414;
    color: black;
    font-family: 'Montserrat', sans-serif;
    font-size: 1.3rem;
    letter-spacing: 0.5px;
    position: relative;
    z-index: 2;

}

.precursorContainer.slide-out {
    transform: translateX(-100vw); /* Move off-screen to the left */
}


.precursor::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 2px solid bisque;
    border-radius: 8px;
    z-index: 1;
    padding: 10px;
}

@keyframes bounce {
    0%, 100% {
        transform: translate(0, 0);
    }
    50% {
        transform: translate(-10px, -10px);
    }
}

.precursor:hover::after {
    animation: bounce 1s infinite;
}
.precursorContainer:hover {
    padding: 1.5px; /* Increased padding on hover */
}

.precursorContainer {
    transform: skew(-40deg, 15deg);
    transition: transform 1s ease, opacity 1s ease, top 1s ease;
    position: relative;
    top: -100vh; /* Start off-screen */
    opacity: 0;
    padding: 0;
    border-radius: 8px;
    background-image: conic-gradient(from var(--angle), red, yellow, green, cyan, blue, magenta, red);
    animation: spin 3s linear infinite;
}

.precursorContainer.loaded {
    top: 0;
    opacity: 1;
}

@keyframes spin {
    from {
        --angle: 0deg;
    }
    to {
        --angle: 360deg;
    }
}
